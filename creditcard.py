# -*- coding: utf-8 -*-
"""Creditcard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zbcmOjHXtdfjxFwt_YYelc4vVgrbK0LV
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

creditcard_data=pd.read_csv('/content/creditcard.csv')

creditcard_data.head()

creditcard_data.tail()

creditcard_data.info()

creditcard_data.isnull().sum()

#distribution of legit transactions & fraudulent transcations
creditcard_data['Class'].value_counts()

#separating the data
legit = creditcard_data[creditcard_data.Class == 0]
fraud = creditcard_data[creditcard_data.Class == 1]

print(legit.shape)
print(fraud.shape)

#statistical measures of data
legit.Amount.describe()

fraud.Amount.describe()

#compare the values from both
creditcard_data.groupby('Class').mean()

legit_sample = legit.sample(n=492)

new_dataset = pd.concat([legit_sample, fraud], axis=0)

new_dataset.head()

new_dataset.tail()

new_dataset['Class'].value_counts()

new_dataset.groupby('Class').mean()

X = new_dataset.drop(columns='Class', axis=1)
Y = new_dataset['Class']

print(X)

print(Y)

#split the data
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

#model training
model = LogisticRegression()

model.fit(X_train, Y_train)

#accuracy score
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on Training data: ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy score on Test data: ', test_data_accuracy)